services:
  postgres-management:
    image: postgres:latest
    container_name: blog-db
    restart: always
    ports:
      - 9432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: postgres
      TZ: Asia/Seoul
    volumes:
      - .docker-volumes/postgres/management-data:/var/lib/postgresql/data
      - .docker-volumes/postgres/init:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 9379:9379
    volumes:
      - .docker-volumes/redis/data:/data
    command: [ "redis-server", "--appendonly", "yes" , "--requirepass", "root!23" ]

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "8010:8010"
      - "8011:8011"
    environment:
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_KRAFT_MODE: "true"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,SASL_PLAINTEXT://0.0.0.0:8010,SASL_PLAINTEXT_LOCALHOST://0.0.0.0:8011,CONTROLLER://kafka:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,SASL_PLAINTEXT://210.104.190.182:8010,SASL_PLAINTEXT_LOCALHOST://localhost:8011"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_PLAINTEXT_LOCALHOST:SASL_PLAINTEXT"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"

      # KRaft 모드에서 AclAuthorizer 대신 StandardAuthorizer 사용
      KAFKA_AUTHORIZER_CLASS_NAME: "org.apache.kafka.metadata.authorizer.StandardAuthorizer"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      # ZooKeeper 설정 제거하고 JAAS 설정 방식 변경
      KAFKA_LISTENER_NAME_SASL_PLAINTEXT_PLAIN_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin!23\" user_admin=\"admin!23\";"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    volumes:
      - ./config/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
      - .docker-volumes/kafka:/tmp/kraft-combined-logs

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: kraft-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT

      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin!23
      SERVER_SERVLET_CONTEXT_PATH: "/kafka-ui"
    depends_on:
      - kafka

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - .docker-volumes/minio:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin!23
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until mc alias set myminio http://minio:9000 admin admin!23; do
        echo 'waiting for minio...';
        sleep 3;
      done;
      mc mb myminio/woobeee || true;
      mc policy set public myminio/woobeee || true
      "